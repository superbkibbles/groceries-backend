package entities

import (
	"time"

	"go.mongodb.org/mongo-driver/bson/primitive"
)

// Product represents a product in the e-commerce system
type Product struct {
	ID            primitive.ObjectID     `json:"id,omitempty" bson:"_id,omitempty"`
	Name          string                 `json:"name" bson:"name"`
	Description   string                 `json:"description" bson:"description"`
	Categories    []primitive.ObjectID   `json:"categories" bson:"categories"` // Category IDs the product belongs to
	Attributes    map[string]interface{} `json:"attributes" bson:"attributes"`
	SKU           string                 `json:"sku" bson:"sku"`
	Price         float64                `json:"price" bson:"price"`
	StockQuantity int                    `json:"stock_quantity" bson:"stock_quantity"`
	Images        []string               `json:"images" bson:"images"`
	CreatedAt     time.Time              `json:"created_at" bson:"created_at"`
	UpdatedAt     time.Time              `json:"updated_at" bson:"updated_at"`
}

// NewProduct creates a new product (ID will be auto-generated by MongoDB)
func NewProduct(name, description string, categories []primitive.ObjectID, attributes map[string]interface{}, sku string, price float64, stockQuantity int, images []string) *Product {
	now := time.Now()
	return &Product{
		Name:          name,
		Description:   description,
		Categories:    categories,
		Attributes:    attributes,
		SKU:           sku,
		Price:         price,
		StockQuantity: stockQuantity,
		Images:        images,
		CreatedAt:     now,
		UpdatedAt:     now,
	}
}

// UpdateStock updates the stock quantity for the product
func (p *Product) UpdateStock(quantity int) error {
	p.StockQuantity = quantity
	p.UpdatedAt = time.Now()
	return nil
}
